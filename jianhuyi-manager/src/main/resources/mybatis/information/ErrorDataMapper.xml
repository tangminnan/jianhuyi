<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.jianhuyi.information.dao.ErrorDataDao">

    <select id="get" resultType="com.jianhuyi.information.domain.ErrorDataDO">
		select `id`,`dis_error`,`light_error`,`mems_error`,`store_error`,`sxtError`,`time`,`update_time` from t_error_data where id = #{value}
	</select>

    <select id="list" resultType="com.jianhuyi.information.domain.ErrorDataDO">
        select `id`,`dis_error`,`light_error`,`mems_error`,`store_error`,`sxtError`,`time`,`update_time` from
        t_error_data
        <where>
            <if test="id != null and id != ''">and id = #{id}</if>
            <if test="disError != null and disError != ''">and dis_error = #{disError}</if>
            <if test="lightError != null and lightError != ''">and light_error = #{lightError}</if>
            <if test="memsError != null and memsError != ''">and mems_error = #{memsError}</if>
            <if test="storeError != null and storeError != ''">and store_error = #{storeError}</if>
            <if test="sxterror != null and sxterror != ''">and sxtError = #{sxterror}</if>
            <if test="time != null and time != ''">and time &gt;= date_sub(#{time}, INTERVAL - 0 DAY) AND time &lt;
                date_sub(#{time}, INTERVAL - 1 DAY)
            </if>
            <if test="updateTime != null and updateTime != ''">and update_time = #{updateTime}</if>
            <if test="userId != null and userId != ''">and user_id = #{userId}</if>
        </where>
        <choose>
            <when test="sort != null and sort.trim() != ''">
                order by ${sort} ${order}
            </when>
            <otherwise>
                order by id desc
            </otherwise>
        </choose>
        <if test="offset != null and limit != null">
            limit #{offset}, #{limit}
        </if>
    </select>

    <select id="count" resultType="int">
        select count(*) from t_error_data
        <where>
            <if test="id != null and id != ''">and id = #{id}</if>
            <if test="disError != null and disError != ''">and dis_error = #{disError}</if>
            <if test="lightError != null and lightError != ''">and light_error = #{lightError}</if>
            <if test="memsError != null and memsError != ''">and mems_error = #{memsError}</if>
            <if test="storeError != null and storeError != ''">and store_error = #{storeError}</if>
            <if test="sxterror != null and sxterror != ''">and sxtError = #{sxterror}</if>
            <if test="time != null and time != ''">and time &gt;= date_sub(#{time}, INTERVAL - 0 DAY) AND time &lt;
                date_sub(#{time}, INTERVAL - 1 DAY)
            </if>
            <if test="updateTime != null and updateTime != ''">and update_time = #{updateTime}</if>
            <if test="userId != null and userId != ''">and user_id = #{userId}</if>
        </where>
    </select>

    <insert id="save" parameterType="com.jianhuyi.information.domain.ErrorDataDO" useGeneratedKeys="true"
            keyProperty="id">
		insert into t_error_data
		(
			`dis_error`, 
			`light_error`, 
			`mems_error`, 
			`store_error`, 
			`sxtError`, 
			`time`, 
			`update_time`
		)
		values
		(
			#{disError}, 
			#{lightError}, 
			#{memsError}, 
			#{storeError}, 
			#{sxterror}, 
			#{time}, 
			#{updateTime}
		)
	</insert>

    <update id="update" parameterType="com.jianhuyi.information.domain.ErrorDataDO">
        update t_error_data
        <set>
            <if test="disError != null">`dis_error` = #{disError},</if>
            <if test="lightError != null">`light_error` = #{lightError},</if>
            <if test="memsError != null">`mems_error` = #{memsError},</if>
            <if test="storeError != null">`store_error` = #{storeError},</if>
            <if test="sxterror != null">`sxtError` = #{sxterror},</if>
            <if test="time != null">`time` = #{time},</if>
            <if test="updateTime != null">`update_time` = #{updateTime}</if>
        </set>
        where id = #{id}
    </update>

    <delete id="remove">
		delete from t_error_data where id = #{value}
	</delete>

    <delete id="batchRemove">
        delete from t_error_data where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

</mapper>